name: 测试和部署

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 设置 Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
        cache-dependency-path: UI/package-lock.json
    
    - name: 安装前端依赖
      run: cd UI && npm install --legacy-peer-deps
    
    - name: 前端单元测试
      run: cd UI && npm test
    
    - name: 设置 Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 安装后端依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 启动后端服务
      run: python server.py &
      
    - name: 等待后端启动
      run: sleep 10
    
    - name: 运行API测试
      run: python api_test.py
    
    - name: 构建前端
      run: cd UI && npm run build
    
    - name: 前端E2E测试
      run: |
        cd UI
        npm run start &
        sleep 10
        npm run cypress:run
  
  deploy:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: UI/package-lock.json
      
      - name: 安装前端依赖
        run: cd UI && npm install --legacy-peer-deps
      
      - name: 构建前端
        run: cd UI && npm run build
      
      - name: 部署到生产服务器
        # 这里应该是部署到您的实际生产环境的步骤
        # 例如可以使用 SSH 部署、Docker 部署等
        run: echo "部署到生产环境的步骤，请根据实际情况修改" 